--- scintilla/scintilla/include/ScintillaWidget.h	2009-01-08 10:14:54.000000000 +0100
+++ scintilla/include/ScintillaWidget.h	2009-08-17 16:34:56.000000000 +0200
@@ -15,9 +15,9 @@
 extern "C" {
 #endif
 
-#define SCINTILLA(obj)          GTK_CHECK_CAST (obj, scintilla_get_type (), ScintillaObject)
-#define SCINTILLA_CLASS(klass)  GTK_CHECK_CLASS_CAST (klass, scintilla_get_type (), ScintillaClass)
-#define IS_SCINTILLA(obj)       GTK_CHECK_TYPE (obj, scintilla_get_type ())
+#define SCINTILLA(obj)          G_TYPE_CHECK_INSTANCE_CAST (obj, scintilla_get_type (), ScintillaObject)
+#define SCINTILLA_CLASS(klass)  G_TYPE_CHECK_CLASS_CAST (klass, scintilla_get_type (), ScintillaClass)
+#define IS_SCINTILLA(obj)       G_TYPE_CHECK_INSTANCE_TYPE (obj, scintilla_get_type ())
 
 typedef struct _ScintillaObject ScintillaObject;
 typedef struct _ScintillaClass  ScintillaClass;
--- scintilla/scintilla/gtk/PlatGTK.cxx	2009-06-13 02:12:31.000000000 +0200
+++ scintilla/PlatGTK.cxx	2009-08-17 16:44:41.000000000 +0200
@@ -1776,7 +1776,7 @@
 #else
 
 	gtk_widget_set_uposition(wid, rc.left, rc.top);
-	gtk_widget_set_usize(wid, rc.right - rc.left, rc.bottom - rc.top);
+	gtk_widget_set_size_request(wid, rc.right - rc.left, rc.bottom - rc.top);
 #endif
 }
 
@@ -1818,7 +1818,7 @@
 	alloc.height = rc.bottom - rc.top;
 	gtk_widget_size_allocate(wid, &alloc);
 #endif
-	gtk_widget_set_usize(PWidget(wid), sizex, sizey);
+	gtk_widget_set_size_request(PWidget(wid), sizex, sizey);
 }
 
 PRectangle Window::GetClientPosition() {
@@ -1938,7 +1938,7 @@
 		gdk_bitmap_unref(list_image->bitmap);
 #else
 	if (list_image->pixbuf)
-		gdk_pixbuf_unref (list_image->pixbuf);
+		g_object_unref (list_image->pixbuf);
 #endif
 	g_free(list_image);
 }
@@ -2210,14 +2210,14 @@
 		          + 2 * (ythickness
 		                 + GTK_CONTAINER(PWidget(list))->border_width + 1));
 #endif
-		gtk_widget_set_usize(GTK_WIDGET(PWidget(list)), -1, height);
+		gtk_widget_set_size_request(GTK_WIDGET(PWidget(list)), -1, height);
 
 		// Get the size of the scroller because we set usize on the window
 		gtk_widget_size_request(GTK_WIDGET(scroller), &req);
 		rc.right = req.width;
 		rc.bottom = req.height;
 
-		gtk_widget_set_usize(GTK_WIDGET(list), -1, -1);
+		gtk_widget_set_size_request(GTK_WIDGET(list), -1, -1);
 		int width = maxItemCharacters;
 		if (width < 12)
 			width = 12;
@@ -2285,7 +2285,7 @@
 	}
 #else
 	if (list_image->pixbuf)
-		gdk_pixbuf_unref(list_image->pixbuf);
+		g_object_unref(list_image->pixbuf);
 	list_image->pixbuf =
 		gdk_pixbuf_new_from_xpm_data((const gchar**)xpm_lineform);
 #endif
@@ -2520,7 +2520,7 @@
 		list_image->bitmap = 0;
 #else
 		if (list_image->pixbuf)
-			gdk_pixbuf_unref(list_image->pixbuf);
+			g_object_unref(list_image->pixbuf);
 		list_image->pixbuf = NULL;
 #endif
 		list_image->xpm_data = xpm_data;
--- scintilla/scintilla/gtk/ScintillaGTK.cxx	2009-07-25 04:50:01.000000000 +0200
+++ scintilla/ScintillaGTK.cxx	2009-08-17 16:35:56.000000000 +0200
@@ -1056,7 +1056,7 @@
 	if (timer.ticking != on) {
 		timer.ticking = on;
 		if (timer.ticking) {
-			timer.tickerID = reinterpret_cast<TickerID>(gtk_timeout_add(timer.tickSize, (GtkFunction)TimeOut, this));
+			timer.tickerID = reinterpret_cast<TickerID>(g_timeout_add(timer.tickSize, (GSourceFunc)TimeOut, this));
 		} else {
 			gtk_timeout_remove(GPOINTER_TO_UINT(timer.tickerID));
 		}
